{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\afpa\\\\Desktop\\\\FRONT\\\\react\\\\src\\\\components\\\\Countries.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [rangeValue, setRangeValue] = useState(36);\n  const [selectedRadio, setSelectedRadio] = useState(\"\");\n  const radios = [\"Africa\", \"America\", \"Asia\", \"Europe\", \"Oceania\"]; // Le useEffect se joue lorsque le composant est monté\n\n  useEffect(() => {\n    axios.get(\"https://restcountries.com/v3.1/all\").then(res => setData(res.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countries\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"radio-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"250\",\n        defaultValue: rangeValue,\n        onChange: e => setRangeValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), radios.map(continent => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: continent,\n          name: \"continentRadio\",\n          checked: continent === selectedRadio,\n          onChange: e => setSelectedRadio(e.target.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: continent,\n          children: continent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), selectedRadio && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSelectedRadio(\"\"),\n      children: \"Annuler la recherche\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.filter(country => country.continents[0].includes(selectedRadio)).sort((a, b) => b.population - a.population).slice(0, rangeValue).map((country, index) => /*#__PURE__*/_jsxDEV(Card, {\n        country: country\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Countries, \"hApykv1xOcjXy1cQQuBBsYlJm4g=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["C:/Users/afpa/Desktop/FRONT/react/src/components/Countries.js"],"names":["React","useEffect","useState","axios","Card","Countries","data","setData","rangeValue","setRangeValue","selectedRadio","setSelectedRadio","radios","get","then","res","e","target","value","map","continent","id","filter","country","continents","includes","sort","a","b","population","slice","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMU,MAAM,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,MAAtB,EAA8B,QAA9B,EAAwC,SAAxC,CAAf,CAJsB,CAMtB;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFU,GADH,CACO,oCADP,EAEGC,IAFH,CAESC,GAAD,IAASR,OAAO,CAACQ,GAAG,CAACT,IAAL,CAFxB;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,GAAG,EAAC,GAFN;AAGE,QAAA,GAAG,EAAC,KAHN;AAIE,QAAA,YAAY,EAAEE,UAJhB;AAKE,QAAA,QAAQ,EAAGQ,CAAD,IAAOP,aAAa,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AALhC;AAAA;AAAA;AAAA;AAAA,cADF,EAQGN,MAAM,CAACO,GAAP,CAAYC,SAAD,iBACV;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,EAAE,EAAEA,SAFN;AAGE,UAAA,IAAI,EAAC,gBAHP;AAIE,UAAA,OAAO,EAAEA,SAAS,KAAKV,aAJzB;AAKE,UAAA,QAAQ,EAAGM,CAAD,IAAOL,gBAAgB,CAACK,CAAC,CAACC,MAAF,CAASI,EAAV;AALnC;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAO,UAAA,OAAO,EAAED,SAAhB;AAAA,oBAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAsBGV,aAAa,iBACZ;AAAQ,MAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,EAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ,eA2BE;AAAA,gBACGL,IAAI,CACFgB,MADF,CACUC,OAAD,IAAaA,OAAO,CAACC,UAAR,CAAmB,CAAnB,EAAsBC,QAAtB,CAA+Bf,aAA/B,CADtB,EAEEgB,IAFF,CAEO,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,UAAF,GAAeF,CAAC,CAACE,UAFlC,EAGEC,KAHF,CAGQ,CAHR,EAGWtB,UAHX,EAIEW,GAJF,CAIM,CAACI,OAAD,EAAUQ,KAAV,kBACH,QAAC,IAAD;AAAkB,QAAA,OAAO,EAAER;AAA3B,SAAWQ,KAAX;AAAA;AAAA;AAAA;AAAA,cALH;AADH;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CApDD;;GAAM1B,S;;KAAAA,S;AAsDN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\n\nconst Countries = () => {\n  const [data, setData] = useState([]);\n  const [rangeValue, setRangeValue] = useState(36);\n  const [selectedRadio, setSelectedRadio] = useState(\"\");\n  const radios = [\"Africa\", \"America\", \"Asia\", \"Europe\", \"Oceania\"];\n\n  // Le useEffect se joue lorsque le composant est monté\n  useEffect(() => {\n    axios\n      .get(\"https://restcountries.com/v3.1/all\")\n      .then((res) => setData(res.data));\n  }, []);\n\n  return (\n    <div className=\"countries\">\n      <ul className=\"radio-container\">\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"250\"\n          defaultValue={rangeValue}\n          onChange={(e) => setRangeValue(e.target.value)}\n        />\n        {radios.map((continent) => (\n          <li>\n            <input\n              type=\"radio\"\n              id={continent}\n              name=\"continentRadio\"\n              checked={continent === selectedRadio}\n              onChange={(e) => setSelectedRadio(e.target.id)}\n            />\n            <label htmlFor={continent}>{continent}</label>\n          </li>\n        ))}\n      </ul>\n      {selectedRadio && (\n        <button onClick={() => setSelectedRadio(\"\")}>\n          Annuler la recherche\n        </button>\n      )}\n      <ul>\n        {data\n          .filter((country) => country.continents[0].includes(selectedRadio))\n          .sort((a, b) => b.population - a.population)\n          .slice(0, rangeValue)\n          .map((country, index) => (\n            <Card key={index} country={country} />\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Countries;\n"]},"metadata":{},"sourceType":"module"}